{"version":3,"sources":["App.js","index.js"],"names":["App","useState","place","setPlace","weather","setWeather","fetchData","e","a","key","axios","get","params","q","units","appid","then","res","console","log","data","catch","err","message","className","main","description","temp","src","icon","alt","name","sys","country","type","value","onChange","target","onKeyPress","placeholder","autoFocus","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAkEeA,G,MA9DH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,KAIVC,EAAS,uCAAG,WAAOC,GAAP,SAAAC,EAAA,yDACF,UAAVD,EAAEE,IADU,gCAERC,IACHC,IAAI,kDAAmD,CACtDC,OAAQ,CACNC,EAAGX,EACHY,MAAO,SACPC,MAAO,sCAGVC,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAAIG,MAChBf,EAAWY,EAAIG,MACfjB,EAAS,OAEVkB,OAAM,SAACC,GAAD,OAASJ,QAAQC,IAAIG,EAAIC,YAfpB,2CAAH,sDAmBf,OACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,qBACZpB,EAAQqB,MACP,6BACE,uBAAGD,UAAU,eAAepB,EAAQA,QAAQ,GAAGsB,aAC/C,uBAAGF,UAAU,WACVpB,EAAQqB,KAAKE,KACd,sCAEF,yBACEC,IAAG,4CAAuCxB,EAAQA,QAAQ,GAAGyB,KAA1D,WACHC,IAAI,WAEN,uBAAGN,UAAU,QACVpB,EAAQ2B,KACT,6BAAM3B,EAAQ4B,IAAIC,YAItB7B,EAAQqB,MACV,0CAAe,6BAAK,kDAEpB,6BACA,6BACA,2BACES,KAAK,OACLH,KAAK,QACLI,MAAOjC,EACPkC,SAAU,SAAC7B,GAAD,OAAOJ,EAASI,EAAE8B,OAAOF,QACnCG,WAAYhC,EACZiC,YAAY,iBACZC,WAAS,QCvDnBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.863d1719.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const [place, setPlace] = useState(\"\");\r\n  const [weather, setWeather] = useState({});\r\n\r\n  const fetchData = async (e) => {\r\n    if (e.key === \"Enter\") {\r\n      await axios\r\n        .get(\"https://api.openweathermap.org/data/2.5/weather\", {\r\n          params: {\r\n            q: place,\r\n            units: \"metric\",\r\n            appid: \"f33a484cf794d08d0148764789aaba32\",\r\n          },\r\n        })\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          setWeather(res.data);\r\n          setPlace(\"\");\r\n        })\r\n        .catch((err) => console.log(err.message));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"weather-container\">\r\n        {weather.main && (\r\n          <div>\r\n            <p className=\"description\">{weather.weather[0].description}</p>\r\n            <p className=\"degrees\">\r\n              {weather.main.temp}\r\n              <sup>&deg;</sup>\r\n            </p>\r\n            <img\r\n              src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\r\n              alt=\"cloudy\"\r\n            />\r\n            <p className=\"city\">\r\n              {weather.name}\r\n              <sup>{weather.sys.country}</sup>\r\n            </p>\r\n          </div>\r\n        )}\r\n        {!weather.main && (\r\n        <h1>Welcome to <br/><strong>weather guide</strong></h1>\r\n        )}\r\n        <br/>\r\n        <br/>\r\n        <input\r\n          type=\"text\"\r\n          name=\"place\"\r\n          value={place}\r\n          onChange={(e) => setPlace(e.target.value)}\r\n          onKeyPress={fetchData}\r\n          placeholder=\"Input location\"\r\n          autoFocus\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}